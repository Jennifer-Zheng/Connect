//
//  ProfileViewController.swift
//  Connect
//
//  Created by Nikhil Pandeti on 4/13/20.
//  Copyright Â© 2020 Nikhil Pandeti. All rights reserved.
//

import Foundation
import Firebase
import FirebaseStorage

class ProfileViewController: UIViewController {
    
    let mutualConnectionCellIdentifier = "MutualConnectionCell"
    
    @IBOutlet weak var profilePic: UIImageView!
    @IBOutlet weak var nameTextField: UITextField!
    @IBOutlet weak var Connection: UIButton!
    @IBOutlet weak var bioTextField: UITextView!
    @IBOutlet weak var mutualsTableView: UITableView!
    
    let user = "D7lCTYj3JTOFjxZlFfKgQHri2ew1"
    
    var connectionsArray : Array<Dictionary<String, String>> = Array<Dictionary<String, String>>()
    
    override func viewDidLoad() {
        super.viewDidLoad()
        self.bioTextField.textContainer.lineFragmentPadding = 0
        
        mutualsTableView.dataSource = self
        mutualsTableView.delegate = self
        let nib = UINib.init(nibName: "MutualConnectionTableViewCell", bundle: nil)
        mutualsTableView.register(nib, forCellReuseIdentifier: mutualConnectionCellIdentifier)
        
        signIn()
        showCurrentProfileInfo()
    }
    
    func signIn() {
        Auth.auth().signIn(withEmail: "test@test.com", password: "test123")
    }
    
    func showCurrentProfileInfo() {
        // Profile picture
        let reference = Storage.storage().reference().child("profile_pics").child("\(user).png")
        // Download in memory with a maximum allowed size = 5 MB
        reference.getData(maxSize: 5 * 1024 * 1024) { data, error in
        if (error != nil) {
            let controller = UIAlertController(
                title: "Warning",
                message: "Image is too large",
                preferredStyle: .alert)
            controller.addAction(UIAlertAction(
                title: "OK",
                style: .default,
                handler: nil))
            self.present(controller, animated: true, completion: nil)
          } else {
            self.profilePic.image = UIImage(data: data!)
          }
        }
        
        // Name and bio
        let db = Firestore.firestore()
        // TODO: replace user id with id generated by Firebase Auth
        db.collection("users").document("\(user)")
            .getDocument(completion: { documentSnapshot, error in
          guard let document = documentSnapshot else {
            print("Error fetching document: \(error!)")
            return
          }
            self.nameTextField.text = document.get("name") as? String;
            self.bioTextField.text = document.get("bio") as? String;
            
            self.connectionsArray = (document.get("connections") as? Array<Dictionary<String, String>>)!
            
        })
    }
    
    @IBAction func dismissButton(_ sender: Any) {
        self.dismiss(animated: true, completion: nil)
    }
    
    @IBAction func add(_ sender: Any) {
        
    }
    @IBAction func block(_ sender: Any) {
        
    }
    @IBAction func requestConnection(_ sender: Any) {
        
    }
}

extension ProfileViewController : UITableViewDataSource {
    func tableView(_ tableView: UITableView, numberOfRowsInSection section: Int) -> Int {
        return connectionsArray.count
    }
    
    func tableView(_ tableView: UITableView, cellForRowAt indexPath: IndexPath) -> UITableViewCell {
        // Mutual connection cell.
        let cell = tableView.dequeueReusableCell(withIdentifier: mutualConnectionCellIdentifier) as! MutualConnectionTableViewCell
        
        cell.mutualRelation.titleLabel?.text = connectionsArray[indexPath.row]["relationship"] ?? "Friend"
        cell.populateWithUser(uid: connectionsArray[indexPath.row]["user"])
        return cell
    }
    
    
}

extension ProfileViewController : UITableViewDelegate {
    
}
